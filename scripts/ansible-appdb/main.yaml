---
- name: Install Database
  hosts: databases
  
  tasks:
  - name: install mariadb-server
    ansible.builtin.dnf:
      name: mariadb-server
      state: latest

  - name: start mariadb
    ansible.builtin.service:
      name: mariadb
      enabled: yes
      state: started

  - name: Update MariaDB root password
    community.mysql.mysql_user:
      name: root
      host: "{{ item }}"
      password: ""
    with_items:
      - 127.0.0.1
      - ::1
      - localhost

  - name: Delete anonymous MySQL user
    community.mysql.mysql_user:
      name: ""
      host: "{{ item }}"
      state: absent
    with_items:
      - localhost
      - "{{ ansible_nodename }}"

  - name: Delete Hostname based MySQL user
    community.mysql.mysql_user:
      name: root
      host: "{{ ansible_nodename }}"
      state: absent

  - name: Remove MySQL test database
    community.mysql.mysql_db:
      name: test
      state: absent

  - name: Create Ansible Database
    community.mysql.mysql_db:
      name: ansible
      state: present

  - name: Create ansible user
    community.mysql.mysql_user:
      name: ansible
      password: ansible
      host: "{{ item }}"
      priv: '*.*:ALL'
      state: present
    with_items:
      - "%"
      - localhost

- name: Install Web application
  hosts: webservers

  tasks:
  - name: install httpd php and php-mysqlnd
    ansible.builtin.dnf:
      name:
        - httpd
        - php
        - php-mysqlnd
        - python3-libsemanage
      state: latest
  
  - name: render template
    ansible.builtin.template:
      src: template/index.php.j2
      dest: /var/www/html/index.php
      owner: root
      group: root
  
  - name: set httpd_can_network_connect flag on and keep it persistent across reboots
    ansible.posix.seboolean:
      name: httpd_can_network_connect
      state: yes
      persistent: yes

  - name: start httpd service
    ansible.builtin.service:
      name: httpd
      state: started
      enabled: yes

- name: Install Loadbalancers
  hosts: loadbalancers
  
  tasks:
  - name: Install Haproxy
    ansible.builtin.dnf:
      name:
        - haproxy
        - python3-libsemanage
      state: latest
  
  - name: Render template for haproxy
    ansible.builtin.template:
      src: template/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
      owner: root
      group: root

  - name: set haproxy_connect_any flag on and keep it persistent across reboots
    ansible.posix.seboolean:
      name: haproxy_connect_any
      state: yes
      persistent: yes
  
  - name: start haproxy
    ansible.builtin.service:
      name: haproxy
      state: started
      enabled: yes
